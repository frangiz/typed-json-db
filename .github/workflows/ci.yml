name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    
    - name: Set up Python
      run: uv python install 3.14
    
    - name: Install dependencies
      run: make install
    
    - name: Run format check
      run: make format-check
    
    - name: Run linting
      run: make check

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Reduced matrix for faster feedback while maintaining good coverage
        include:
          - os: ubuntu-latest
            python-version: "3.11"
          - os: ubuntu-latest
            python-version: "3.12" 
          - os: ubuntu-latest
            python-version: "3.13"
          - os: ubuntu-latest
            python-version: "3.14"
          - os: windows-latest
            python-version: "3.14"  # Test latest Python on Windows
          - os: macos-latest
            python-version: "3.14"  # Test latest Python on macOS
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: make install
    
    - name: Run tests
      run: make test

  coverage:
    name: Coverage Report
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    
    - name: Set up Python
      run: uv python install 3.14
    
    - name: Install dependencies
      run: make install
    
    - name: Run coverage report
      run: uv run pytest --cov=src --cov-branch --cov-report=xml --cov-report=term-missing

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    
    - name: Set up Python
      run: uv python install 3.14
    
    - name: Install dependencies
      run: make install
    
    - name: Build package
      run: make build
    
    - name: Check package
      run: |
        uv run --with twine twine check dist/*
    
    - name: Test installation from wheel
      run: |
        # Test installation in isolated environment
        uv run --isolated --with dist/*.whl python -c "
        import typed_json_db
        print(f'âœ… Package installed successfully')
        print(f'ðŸ“¦ Version: {typed_json_db.__version__}')
        print(f'ðŸ“‹ Available: {typed_json_db.__all__}')
        
        # Test basic functionality
        from typed_json_db import JsonDB
        print('âœ… JsonDB import successful')
        "
    
    - name: Test CLI entry point
      run: |
        uv run --isolated --with dist/*.whl typed-json-db
